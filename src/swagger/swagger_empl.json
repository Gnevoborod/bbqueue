{
  "openapi": "3.0.1",
  "info": {
    "title": "BBQueue API. Сервис управления сотрудниками.",
    "description": "BBQueue - очередь лучшей прожарки",
    "version": "v1"
  },
  "paths": {
    "/api/authorization/jwt": {
      "get": {
        "tags": [
          "Authorization"
        ],
        "summary": "Поставляет JWT токен для конкретного пользователя",
        "parameters": [
          {
            "name": "employeeExternalId",
            "in": "query",
            "description": "Код пользователя во внешней системе (основной системе в которой осуществляется авторизация)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/employee/employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Поставляет информацию о сотруднике",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/employee/employee_add": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Добавляет нового сотрудника",
        "requestBody": {
          "description": "Структура содержащая информацию о пользователе",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRegistryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRegistryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRegistryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/employee/role_set": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Устанавливает сотруднику роль",
        "requestBody": {
          "description": "Структура содержащая идентификатор сотрудника и название роли",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSetRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSetRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSetRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/employee/roles": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Поставляет список ролей в строковом представлении",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeRoleInfoListDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "externalSystemIdentity": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "role": {
            "$ref": "#/components/schemas/EmployeeRole"
          }
        },
        "additionalProperties": false
      },
      "EmployeeRegistryDto": {
        "required": [
          "externalSystemId",
          "name"
        ],
        "type": "object",
        "properties": {
          "externalSystemId": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeRole": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "EmployeeRoleInfoListDto": {
        "type": "object",
        "properties": {
          "employeeRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeSetRoleDto": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JwtDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Put **_ONLY_** JWT Bearer token on textbox below!",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}