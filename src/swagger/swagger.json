{
  "openapi": "3.0.1",
  "info": {
    "title": "BBQueue API",
    "description": "BBQueue - очередь лучшей прожарки",
    "version": "v1"
  },
  "paths": {
    "/api/authorization/jwt": {
      "get": {
        "tags": [
          "Authorization"
        ],
        "summary": "Поставляет JWT токен для конкретного пользователя",
        "parameters": [
          {
            "name": "employeeExternalId",
            "in": "query",
            "description": "Код пользователя во внешней системе (основной системе в которой осуществляется авторизация)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/employee/employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Поставляет информацию о сотруднике",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/employee/employee_add": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Добавляет нового сотрудника",
        "requestBody": {
          "description": "Структура содержащая информацию о пользователе",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRegistryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRegistryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRegistryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/employee/role_set": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Устанавливает сотруднику роль",
        "requestBody": {
          "description": "Структура содержащая идентификатор сотрудника и название роли",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSetRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSetRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSetRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/employee/roles": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Поставляет список ролей в строковом представлении",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeRoleInfoListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/employee/employee_to_window": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Прикрепляет сотрудника к окну",
        "requestBody": {
          "description": "Структура содержит идентификатор окна для привязки сотрудника (а id сотрудника берём из JWT)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeToWindowDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeToWindowDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeToWindowDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/queue/nextCustomer": {
      "post": {
        "tags": [
          "Queue"
        ],
        "summary": "Вызов следующего талона к определённому окну",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/target/targets": {
      "get": {
        "tags": [
          "Target"
        ],
        "summary": "Поставляет список целей",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/target/hierarchy": {
      "get": {
        "tags": [
          "Target"
        ],
        "summary": "Возвращает список подразделов и целей",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupHierarchyDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/target/groups": {
      "get": {
        "tags": [
          "Target"
        ],
        "summary": "Поставляет список разделов и подразделов.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/target/add_target": {
      "post": {
        "tags": [
          "Target"
        ],
        "summary": "Создаёт новую цель",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TargetCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetCreatedIdDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/target/add_group": {
      "post": {
        "tags": [
          "Target"
        ],
        "summary": "Создаёт новый раздел\\подраздел",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupCreatedIdDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ticket/ticket": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Выдаёт новый талон",
        "parameters": [
          {
            "name": "TargetId",
            "in": "query",
            "description": "Код цели",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ticket/redirect": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Осуществляет перенаправление талона на другую цель",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketRedirectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketRedirectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketRedirectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ticket/list": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Поставляет список необработанных талонов",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ticket/close": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Осуществляет закрытие талона",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketClose"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketClose"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketClose"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/window/work_state": {
      "post": {
        "tags": [
          "Window"
        ],
        "summary": "Меняет состояние окна (Открыто, Перерыв, Закрыто)",
        "requestBody": {
          "description": "На вход принимает номер окна и состояние (строковое значение)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeWindowWorkStateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeWindowWorkStateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeWindowWorkStateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/window/windows": {
      "get": {
        "tags": [
          "Window"
        ],
        "summary": "Возвращает список окон",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WindowListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/window/add_window": {
      "post": {
        "tags": [
          "Window"
        ],
        "summary": "Создаёт новое окно",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WindowCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WindowCreatedIdDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/window/add_target_window": {
      "post": {
        "tags": [
          "Window"
        ],
        "summary": "Прикрепляет цель к окну",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowTargetCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowTargetCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WindowTargetCreateDto"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChangeWindowWorkStateDto": {
        "required": [
          "number",
          "windowWorkState"
        ],
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 6,
            "type": "string"
          },
          "windowWorkState": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "externalSystemIdentity": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "role": {
            "$ref": "#/components/schemas/EmployeeRole"
          }
        },
        "additionalProperties": false
      },
      "EmployeeRegistryDto": {
        "required": [
          "externalSystemId",
          "name"
        ],
        "type": "object",
        "properties": {
          "externalSystemId": {
            "maxLength": 16,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeRole": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "EmployeeRoleInfoListDto": {
        "type": "object",
        "properties": {
          "employeeRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeSetRoleDto": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeToWindowDto": {
        "type": "object",
        "properties": {
          "windowId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ErrorDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupCreatedIdDto": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GroupCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "groupLinkId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "groupLinkId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupHierarchyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "groupsInHierarchy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupHierarchyDto"
            },
            "nullable": true
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupListDto": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JwtDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TargetCreatedIdDto": {
        "type": "object",
        "properties": {
          "targetId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TargetCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string"
          },
          "groupLinkId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TargetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TargetListDto": {
        "type": "object",
        "properties": {
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketClose": {
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TicketDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "publicNumber": {
            "type": "string",
            "nullable": true
          },
          "targetId": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TicketRedirectDto": {
        "type": "object",
        "properties": {
          "targetId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "ticketId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WindowCreatedIdDto": {
        "type": "object",
        "properties": {
          "windowId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WindowCreateDto": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 6,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WindowDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WindowListDto": {
        "type": "object",
        "properties": {
          "windows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WindowDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WindowTargetCreateDto": {
        "type": "object",
        "properties": {
          "windowId": {
            "type": "integer",
            "format": "int64"
          },
          "targetId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Put **_ONLY_** JWT Bearer token on textbox below!",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}